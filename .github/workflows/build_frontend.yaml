name: CI Frontend EazyPay

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-frontend:
    name: Build & Publish Frontend (React)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 🧩 Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # 📦 Install dependencies and build
      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build React app
        working-directory: frontend
        run: npm run build

      # 🗃️ Upload build artifacts (optional)
      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: eazypay-frontend-build
          path: frontend/build

      # 🧮 Compute Docker image tags (lowercase + semantic version)
      - name: Set Docker image tags
        id: vars
        run: |
          REPO_OWNER=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=ghcr.io/$REPO_OWNER/eazypay-frontend

          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VERSION_TAG="${GITHUB_REF_NAME}"
          else
            VERSION_TAG="sha-${GITHUB_SHA::7}"
          fi

          echo "tags=${IMAGE_NAME}:latest,${IMAGE_NAME}:${VERSION_TAG}" >> "$GITHUB_OUTPUT"

      # 🐳 Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 🔐 Authenticate with GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 🚀 Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.vars.outputs.tags }}

  
